<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/security
      http://www.springframework.org/schema/security/spring-security.xsd">

  <!-- Stateless RESTful services use BASIC authentication   -->
  <http use-expressions="false" create-session="stateless" pattern="/rest/**">
    <intercept-url pattern="/**" access="ROLE_REST"/>
    <http-basic />
  </http>

  <http use-expressions="true" authentication-manager-ref="jdbcAuthenticationManager">
    <!-- enable csrf protection -->
    <csrf/>
    <!-- configure the login form -->
    <form-login
      login-page="/login/custom_login"
      login-processing-url="/j_spring_security_check"
      authentication-failure-url="/login/custom_login?error"
      default-target-url="/users/subscriptions"
      authentication-success-handler-ref="myAuthenticationSuccessHandler"
      username-parameter="username"
      password-parameter="password" />

    <!-- configure the logout function - will go to home page
    logout-url="/j_spring_security_logout" -->
    <logout
      logout-success-url="/"
      delete-cookies="JSESSIONID" />

    <intercept-url pattern="/users/registration" access="permitAll"/>
    <intercept-url pattern="/users/registration/confirm-email" access="permitAll"/>
    <intercept-url pattern="/users/registration/confirmed" access="permitAll"/>
    <intercept-url pattern="/users/password-forgotten" access="permitAll"/>
    <intercept-url pattern="/users/password-forgotten/confirm-email" access="permitAll"/>
    <intercept-url pattern="/users/password-forgotten/confirmed" access="permitAll"/>
    <intercept-url pattern="/users/**/*" access="hasRole('ROLE_USER')"/>
    <intercept-url pattern="/**" access="permitAll"/>
  </http>

  <beans:bean id="myAuthenticationSuccessHandler"
              class="org.podcastpedia.web.util.MyCustomLoginSuccessHandler" >
    <beans:constructor-arg name="defaultTargetUrl" value="/users/subscriptions"/>
  </beans:bean>

  <!-- Select users and user_roles from database -->
  <authentication-manager  id="jdbcAuthenticationManager">
    <authentication-provider>
      <jdbc-user-service data-source-ref="dataSource"
                         users-by-username-query=
                           "select username, password, enabled from users where username=? and enabled=1"
                         authorities-by-username-query=
                           "select username, authority from authorities where username=?" />
      <password-encoder ref="passwordEncoder"/>
    </authentication-provider>
  </authentication-manager>
  <!-- This is used to hash the password of the user. -->
  <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
    <beans:constructor-arg index="0" value="10"/>
  </beans:bean>

  <authentication-manager>
    <authentication-provider>
      <user-service>
        <user name="rest_user" password="123rest" authorities="ROLE_REST"/>
      </user-service>
    </authentication-provider>
  </authentication-manager>

  <authentication-manager id="inMemoryAuthenticationManager">
    <authentication-provider>
      <user-service>
        <user name="ama" password="ama" authorities="hasRole('ROLE_USER')"/>
      </user-service>
    </authentication-provider>
  </authentication-manager>

</beans:beans>
