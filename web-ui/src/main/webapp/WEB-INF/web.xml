<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<icon>
		<small-icon>/static/images/star.gif</small-icon>
	</icon>

	<display-name>Podcastpedia.org - Knowledge to go</display-name>

	<description>The open source podcast directory</description>

	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>podcastpedia.root</param-value>
	</context-param>

	<!--
		Location of the Log4J config file, for initialization and refresh checks.
		Applied by Log4jConfigListener.
	-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j/log4j.xml</param-value>
	</context-param>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
      classpath:spring/applicationContext-web-ui-security.xml
      classpath:spring/applicationContext-core.xml
    </param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!-- default servlet which serves static resources as well as serves the directory listings if they are enabled -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>/static/*</url-pattern>
	</servlet-mapping>

  <!-- Spring MVC -->
	<servlet>
		<servlet-name>podcastpedia</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
        classpath:spring/applicationContext-web-ui-security.xml
        classpath:spring/applicationContext-core.xml
        classpath:spring/applicationContext-web-ui.xml
      </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>podcastpedia</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- Reads request input using UTF-8 encoding
	The character encoding type for the request can be set using the CharacterEncodingFilter.
	By setting this, when a form values are retrieved from the request the encoding type will be UTF-8.
	 -->
	<filter>
		<filter-name>characterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
    <filter-name>etagFilter</filter-name>
    <filter-class>org.springframework.web.filter.ShallowEtagHeaderFilter</filter-class>
	</filter>
  <filter-mapping>
    <filter-name>etagFilter</filter-name>
    <servlet-name>podcastpedia</servlet-name>
  </filter-mapping>

  <!--Hook into spring security-->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

	<!-- set session timeout for 60 minutes <url-pattern>/*.atom</url-pattern> -->
	<session-config>
		<session-timeout>60</session-timeout>
		<tracking-mode>COOKIE</tracking-mode>
	</session-config>

  <resource-ref>
    <description>Database resource for podcastpedia web application </description>
    <res-ref-name>jdbc/podcast_db</res-ref-name>
    <res-type>javax.sql.DataSource</res-type>
    <res-auth>Container</res-auth>
  </resource-ref>
	<resource-ref>
	  <description>
	    Resource reference to a factory for javax.mail.Session
	    instances that may be used for sending electronic mail
	    messages, preconfigured to connect to the appropriate
	    SMTP server.
	  </description>
	  <res-ref-name>mail/Session</res-ref-name>
	  <res-type>javax.mail.Session</res-type>
	  <res-auth>Container</res-auth>
	</resource-ref>

	<error-page>
    <error-code>404</error-code>
    <location>/errors/404.html</location>
	</error-page>

</web-app>
