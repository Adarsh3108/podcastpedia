<?xml version="1.0" encoding="UTF-8"?>

<beans  xmlns="http://www.springframework.org/schema/beans"
	    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	    xmlns:p="http://www.springframework.org/schema/p" 
	    xmlns:context="http://www.springframework.org/schema/context"
	    xmlns:mvc="http://www.springframework.org/schema/mvc"
	    xsi:schemaLocation="
 
			http://www.springframework.org/schema/beans	 
			http://www.springframework.org/schema/beans/spring-beans.xsd
			 
			http://www.springframework.org/schema/mvc	 
			http://www.springframework.org/schema/mvc/spring-mvc.xsd
			
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- ========================= Import Tiles-related configuration ========================= -->
	<import resource="tiles-context.xml" />

	<import resource="classpath:spring/applicationContext-core.xml" />

	<!--
		- The controllers are autodetected POJOs labeled with the @Controller annotation.
	-->
	<context:component-scan base-package="org.podcastpedia.web.*"/>
	
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven/>

	
	<!-- Application Message Bundle -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages/messages" />
		<property name="defaultEncoding" value="UTF-8"/>
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" >
		<property name="cookieName" value="preferredLanguage"/>
		<property name="defaultLocale" value="en_US" /> 
		<property name="cookieMaxAge" value="604800"/>		
	</bean>
		 		
	<mvc:interceptors>
		<!-- Changes the locale when a 'lang' request parameter is sent; e.g. /?lang=de -->
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang"/>
		</bean>
		               
	</mvc:interceptors>
     
    <!-- Exception handling configuration      
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
			    <prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
			    <prop key=".TypeMismatchException">resourceNotFound</prop>
			    <prop key=".MissingServletRequestParameterException">resourceNotFound</prop>			
				<prop key="java.lang.Exception">friendlyError</prop>
			</props>
		</property>
		<property name="defaultErrorView" value="friendlyError"/>
	</bean>
	--> 
	<bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" p:order="1" />
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" p:order="2" p:defaultErrorView="uncaughtException">
	  <property name="exceptionMappings">
	    <props>
	      <prop key="org.springframework.core.NestedRuntimeException.DataAccessException">dataAccessFailure</prop>
	      <prop key="org.springframework.web.servlet.mvc.multiaction.NoSuchRequestHandlingMethodException">resourceNotFound</prop>
	      <prop key="org.springframework.beans.TypeMismatchException">resourceNotFound</prop>
	      <prop key="org.springframework.web.bind.MissingServletRequestParameterException">resourceNotFound</prop>
	    </props>
	  </property>
	</bean>	

			
	<!-- validators -->
	<bean id="suggestPodcastValidator" class="org.podcastpedia.web.suggestpodcast.SuggestPodcastValidator"/>
	<bean id="contactFormValidator" class="org.podcastpedia.web.contact.ContactFormValidator"/>
	
	<bean id="reCaptcha" class="net.tanesha.recaptcha.ReCaptchaImpl">
		<property name="privateKey" value="6LcW3OASAAAAAKVX2duVsSy2uMMHL105-jPDrHMD"/>
	</bean>
   
</beans>
